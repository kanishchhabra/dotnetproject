// <auto-generated />
using System;
using CDUMusic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CDUMusic.Migrations
{
    [DbContext(typeof(CDUMusicContext))]
    partial class CDUMusicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CDUMusic.Models.Duration", b =>
                {
                    b.Property<int>("DurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Cost")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.HasKey("DurationId");

                    b.ToTable("Duration");
                });

            modelBuilder.Entity("CDUMusic.Models.Instrument", b =>
                {
                    b.Property<int>("InstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InsType")
                        .HasColumnType("int");

                    b.Property<string>("InstrumentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("InstrumentId");

                    b.ToTable("Instrument");
                });

            modelBuilder.Entity("CDUMusic.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DurationId")
                        .HasColumnType("int");

                    b.Property<int?>("InstrumentId")
                        .HasColumnType("int");

                    b.Property<int>("LessonDate")
                        .HasColumnType("int");

                    b.Property<string>("LessonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonTerm")
                        .HasColumnType("int");

                    b.Property<DateTime>("LessonTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonYear")
                        .HasColumnType("int");

                    b.Property<int?>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("LessonId");

                    b.HasIndex("DurationId");

                    b.HasIndex("InstrumentId");

                    b.HasIndex("TutorId");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("CDUMusic.Models.LessonList", b =>
                {
                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("LessonListId")
                        .HasColumnType("int");

                    b.Property<bool>("isPaid")
                        .HasColumnType("bit");

                    b.HasKey("LessonId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("LessonList");
                });

            modelBuilder.Entity("CDUMusic.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("ParentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PaymentContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("CDUMusic.Models.Tutor", b =>
                {
                    b.Property<int>("TutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("TutorId");

                    b.ToTable("Tutor");
                });

            modelBuilder.Entity("CDUMusic.Models.Lesson", b =>
                {
                    b.HasOne("CDUMusic.Models.Duration", "Duration")
                        .WithMany("Lessons")
                        .HasForeignKey("DurationId");

                    b.HasOne("CDUMusic.Models.Instrument", "Instrument")
                        .WithMany("Lessons")
                        .HasForeignKey("InstrumentId");

                    b.HasOne("CDUMusic.Models.Tutor", "Tutor")
                        .WithMany("Lessons")
                        .HasForeignKey("TutorId");

                    b.Navigation("Duration");

                    b.Navigation("Instrument");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("CDUMusic.Models.LessonList", b =>
                {
                    b.HasOne("CDUMusic.Models.Lesson", "Lesson")
                        .WithMany("LessonLists")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CDUMusic.Models.Student", "Student")
                        .WithMany("LessonLists")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CDUMusic.Models.Duration", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("CDUMusic.Models.Instrument", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("CDUMusic.Models.Lesson", b =>
                {
                    b.Navigation("LessonLists");
                });

            modelBuilder.Entity("CDUMusic.Models.Student", b =>
                {
                    b.Navigation("LessonLists");
                });

            modelBuilder.Entity("CDUMusic.Models.Tutor", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
